USE LAB4
GO

CREATE DATABASE FinalTerm
GO
USE FinalTerm
GO

-- RESTAURANT MANAGEMENT
-- ONLINE ORDER
-- 
CREATE TABLE CUSTOMERS
(
	CUSTOMER_ID INT IDENTITY(1,1) PRIMARY KEY,
	CUSTOMER_NAME VARCHAR(255) NOT NULL,
	USERNAME VARCHAR(255) NOT NULL,
	PASSWORD VARCHAR(255) NOT NULL,
	ADDRESS VARCHAR(255) NOT NULL,
	EMAIL VARCHAR(50) NOT NULL,
	PHONE VARCHAR(15) NOT NULL
)

CREATE TABLE CUSTOMER_DETAILS
(
	CUSTOMER_DETAIL_ID INT IDENTITY(1,1) PRIMARY KEY,
	CUSTOMER_ID INT,
	CUSTOMER_BUDGET DECIMAL(10, 2) NOT NULL,
	STATUS VARCHAR (255) NOT NULL,

	FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
)

CREATE TABLE PRODUCTS
(
	PRODUCT_ID INT IDENTITY(1,1) PRIMARY KEY,
	PRODUCT_NAME VARCHAR(255) NOT NULL,
	PRICE DECIMAL(10, 2) NOT NULL,
	QUANTITY INT,
	DESCRIPTION VARCHAR(255) NOT NULL,
	IMAGE VARCHAR(255),
	TYPE VARCHAR(255) NOT NULL
)

CREATE TABLE BRANCH
(
	BRANCH_ID INT IDENTITY(1,1) PRIMARY KEY,
	BRANCH_NAME VARCHAR(255) NOT NULL,
	BRANCH_ADDRESS VARCHAR(255) NOT NULL
)

CREATE TABLE SEATS
(
	SEAT_ID INT IDENTITY(1,1) PRIMARY KEY,
	BRANCH_ID INT,
	STATUS VARCHAR(255) NOT NULL, --Taken or Not Taken

	FOREIGN KEY (BRANCH_ID) REFERENCES BRANCH(BRANCH_ID)
)

CREATE TABLE ORDERS
(
	ORDER_ID INT IDENTITY(1,1) PRIMARY KEY,
	CUSTOMER_ID INT,
	PRODUCT_ID INT,
	SEAT_ID INT,
	BRANCH_ID INT,
	ORDER_DATE DATETIME NOT NULL,
	ISPAYMENT VARCHAR(255) NOT NULL, -- True or False
	PAYMENT_METHOD VARCHAR(255) NOT NULL, -- Cash Or Transfer
	
	FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID),
	FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS(PRODUCT_ID),
	FOREIGN KEY (SEAT_ID) REFERENCES SEATS(SEAT_ID),
	FOREIGN KEY (BRANCH_ID) REFERENCES BRANCH(BRANCH_ID)
)

CREATE TABLE ORDER_DETAILS
(
	ORDER_DETAILS_ID INT IDENTITY(1,1) PRIMARY KEY,
	ORDER_ID INT,
	PRODUCT_NAME VARCHAR(255) NOT NULL,
	QUANTITY INT NOT NULL,
	PRICE DECIMAL(10, 2) NOT NULL,

	FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID)
)

CREATE TABLE TRANSACTIONS
(
    TRANSACTION_ID INT IDENTITY(1,1) PRIMARY KEY,
    CUSTOMER_ID INT,
    AMOUNT DECIMAL(10, 2) NOT NULL,
    TRANSACTION_DATE DATETIME NOT NULL,
    TRANSACTION_TYPE VARCHAR(50) NOT NULL, -- e.g., 'Deposit', 'Withdrawal', 'Purchase'
    DESCRIPTION VARCHAR(255),

    FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMERS(CUSTOMER_ID)
);
